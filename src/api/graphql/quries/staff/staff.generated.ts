/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type StaffQueryVariables = Types.Exact<{
  staffId: Types.Scalars['Int'];
}>;


export type StaffQueryResult = { __typename?: 'Query', staff: { __typename?: 'Staff', id: number, firstName?: string | null, lastName?: string | null } };


export const StaffDocument = `
    query staff($staffId: Int!) {
  staff(staffId: $staffId) {
    id
    firstName
    lastName
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    staff: build.query<StaffQueryResult, StaffQueryVariables>({
      query: (variables) => ({ document: StaffDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useStaffQuery, useLazyStaffQuery } = injectedRtkApi;

