/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type UpdateStaffMutationVariables = Types.Exact<{
  staffId: Types.Scalars['Int'];
  firstName?: Types.InputMaybe<Types.Scalars['String']>;
  lastName?: Types.InputMaybe<Types.Scalars['String']>;
}>;


export type UpdateStaffMutationResult = { __typename?: 'Mutation', updateStaff: { __typename?: 'Staff', id: number, firstName?: string | null, lastName?: string | null } };


export const UpdateStaffDocument = `
    mutation updateStaff($staffId: Int!, $firstName: String, $lastName: String) {
  updateStaff(staffId: $staffId, firstName: $firstName, lastName: $lastName) {
    id
    firstName
    lastName
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    updateStaff: build.mutation<UpdateStaffMutationResult, UpdateStaffMutationVariables>({
      query: (variables) => ({ document: UpdateStaffDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useUpdateStaffMutation } = injectedRtkApi;

