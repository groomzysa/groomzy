/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type AddGalleryMutationVariables = Types.Exact<{
  name: Types.Scalars['String'];
  galleryImage: Types.Scalars['File'];
}>;


export type AddGalleryMutationResult = { __typename?: 'Mutation', addGallery: { __typename?: 'Gallery', id: number, name?: string | null, galleryImageUrl?: string | null } };


export const AddGalleryDocument = `
    mutation addGallery($name: String!, $galleryImage: File!) {
  addGallery(name: $name, galleryImage: $galleryImage) {
    id
    name
    galleryImageUrl
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    addGallery: build.mutation<AddGalleryMutationResult, AddGalleryMutationVariables>({
      query: (variables) => ({ document: AddGalleryDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useAddGalleryMutation } = injectedRtkApi;

