/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type UpdateGalleryMutationVariables = Types.Exact<{
  galleryId: Types.Scalars['Int'];
  name?: Types.InputMaybe<Types.Scalars['String']>;
  galleryImage?: Types.InputMaybe<Types.Scalars['File']>;
}>;


export type UpdateGalleryMutationResult = { __typename?: 'Mutation', updateGallery: { __typename?: 'Gallery', id: number, name?: string | null, galleryImageUrl?: string | null } };


export const UpdateGalleryDocument = `
    mutation updateGallery($galleryId: Int!, $name: String, $galleryImage: File) {
  updateGallery(galleryId: $galleryId, name: $name, galleryImage: $galleryImage) {
    id
    name
    galleryImageUrl
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    updateGallery: build.mutation<UpdateGalleryMutationResult, UpdateGalleryMutationVariables>({
      query: (variables) => ({ document: UpdateGalleryDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useUpdateGalleryMutation } = injectedRtkApi;

