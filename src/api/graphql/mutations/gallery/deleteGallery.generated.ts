/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type DeleteGalleryMutationVariables = Types.Exact<{
  galleryId: Types.Scalars['Int'];
}>;


export type DeleteGalleryMutationResult = { __typename?: 'Mutation', deleteGallery: { __typename?: 'Gallery', id: number, name?: string | null, galleryImageUrl?: string | null } };


export const DeleteGalleryDocument = `
    mutation deleteGallery($galleryId: Int!) {
  deleteGallery(galleryId: $galleryId) {
    id
    name
    galleryImageUrl
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    deleteGallery: build.mutation<DeleteGalleryMutationResult, DeleteGalleryMutationVariables>({
      query: (variables) => ({ document: DeleteGalleryDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useDeleteGalleryMutation } = injectedRtkApi;

